{"version":3,"file":"static/js/163.5416a4a4.chunk.js","mappings":"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","sources":["components/BackButton/BackButton.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/fetchAPI.jsx","utils.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button onClick={() => navigate(-1)} type=\"button\">\n      &larr; Go back\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetails_movie__9X7I7\",\"movie__details\":\"MovieDetails_movie__details__FDB39\",\"movie__genres\":\"MovieDetails_movie__genres__qJHB-\",\"movie__additional\":\"MovieDetails_movie__additional__iw3r-\"};","import { Link, Outlet } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { API_URL, IMG_URL } from 'utils';\nimport { fetchData } from 'services/fetchAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { BackButton } from 'components/BackButton/BackButton';\n\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { title, overview, genres, vote_average, release_date, poster_path } =\n    movie;\n\n  useEffect(() => {\n    fetchData(`${API_URL}/movie/${id}`, setMovie, setIsLoading);\n  }, [id]);\n\n  return (\n    <div className=\"container\">\n      <BackButton />\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <>\n          <div className={css.movie}>\n            <picture>\n              <img width={200} src={`${IMG_URL}${poster_path}`} alt=\"\" />\n            </picture>\n\n            <div className={css.movie__details}>\n              <h2>\n                {title} ({new Date(release_date).getFullYear()})\n              </h2>\n              <p>User Score: {(vote_average * 10).toFixed()}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h4>Genres</h4>\n              <ul className={css.movie__genres}>\n                {genres?.map(genre => (\n                  <li key={genre.name}>{genre.name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div className={css.movie__additional}>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={`cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { API_KEY } from 'utils';\n\nexport const fetchData = async (\n  url,\n  setState,\n  setLoadingState,\n  returnValue\n) => {\n  // Set isLoading to true\n  setLoadingState(true);\n\n  try {\n    // Fetch data\n    const res = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const { data } = res;\n\n    // Assign data to state\n    if (returnValue) setState(data[returnValue]);\n    else setState(data);\n  } catch (error) {\n    console.log(error);\n  } finally {\n    // Set isLoading to false no matter if error or not\n    setLoadingState(false);\n  }\n};\n","export const API_KEY = 'dd28573eee75132a5c1e09d16e28974f';\nexport const API_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const IMG_PLACEHOLDER =\n  'https://previews.123rf.com/images/viktorijareut/viktorijareut1905/viktorijareut190500747/123236861-default-avatar-profile-icon-grey-photo-placeholder.jpg';\n"],"names":["BackButton","navigate","useNavigate","_jsx","onClick","type","children","MovieDetails","id","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","title","overview","genres","vote_average","release_date","poster_path","useEffect","fetchData","concat","API_URL","_jsxs","className","Loader","_Fragment","css","width","src","IMG_URL","alt","Date","getFullYear","toFixed","map","genre","name","Link","to","Outlet","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_ref","_asyncToGenerator","_callee","url","setState","setLoadingState","returnValue","res","data","_context","axios","params","api_key","API_KEY","t0","console","log","_x","_x2","_x3","_x4","apply","arguments","IMG_PLACEHOLDER"],"sourceRoot":""}